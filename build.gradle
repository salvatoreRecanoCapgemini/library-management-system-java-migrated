plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'com.fasterxml.jackson.module:jackson-datatype-jsr310:2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.3'
    runtimeOnly 'com.h2database:h2:2.1.212'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
}

test {
    useJUnitPlatform()
}

task build(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['build']
}

task clean(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['clean']
}

task test(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['test']
}

task assemble(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['assemble']
}

task check(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['check']
}

task buildDependents(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['buildDependents']
}

task buildNeeded(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['buildNeeded']
}

task compileJava(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['compileJava']
}

task processResources(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['processResources']
}

task classes(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['classes']
}

task compileTestJava(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['compileTestJava']
}

task processTestResources(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['processTestResources']
}

task testClasses(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['testClasses']
}

task test(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['test']
}

task jar(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['jar']
}

task assemble(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['assemble']
}

task compileTestJava(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['compileTestJava']
}

task processTestResources(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['processTestResources']
}

task testClasses(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['testClasses']
}

task bootJar(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['bootJar']
}

task bootWar(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['bootWar']
}

task assemble(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['assemble']
}

task build(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['build']
}

task clean(type: GradleBuild) {
    buildFile = 'build.gradle'
    tasks = ['clean']
}